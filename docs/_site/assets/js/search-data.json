{"0": {
    "doc": "API",
    "title": "API",
    "content": " ",
    "url": "http://localhost:4000/api#api",
    "relUrl": "/api#api"
  },"1": {
    "doc": "API",
    "title": "Lighthouse",
    "content": "| METHOD | DESCRIPTION | ENDPOINT | PARAMS | . | GET | All Audits | /api/audit/lighthouse/score | None | . | GET | Audit by Id | /api/audit/lighthouse/score/&lt;id&gt; | id | . | POST | Generates an Audit | /api/audit/lighthouse/score | url | . ",
    "url": "http://localhost:4000/api#lighthouse",
    "relUrl": "/api#lighthouse"
  },"2": {
    "doc": "API",
    "title": "Extract",
    "content": "Headers . | METHOD | DESCRIPTION | ENDPOINT | PARAMS | . | GET | All Extracted Headers | /api/extract/headers | None | . | GET | Headers by Id | /api/extract/headers/&lt;id&gt; | id | . | POST | Extract Header from URL | /api/extract/headers | url | . | POST | Deletes Headers by Id | /api/extract/headers/delete | id | . Status Code Links . | METHOD | DESCRIPTION | ENDPOINT | PARAMS | . | GET | All Links status extracted from pages | /api/extract/links | None | . | GET | Links Status by ID | /api/extract/links/&lt;id&gt; | id | . | POST | Extracts link status from URL | /api/extract/links | url | . | POST | Delete Link status by ID | /api/extract/links/delete | id | . Internal &amp; External Links . | METHOD | DESCRIPTION | ENDPOINT | PARAMS | . | GET | All Internal &amp; External links extracted from pages | /api/extract/links/website | None | . | GET | Internal &amp; External by ID | /api/extract/links/website/&lt;id&gt; | id | . | POST | Extracts Internal &amp; External links from URL | /api/extract/links/website | url | . | POST | Deletes Internal &amp; External links by ID | /api/extract/links/website/delete | id | . Images . | METHOD | DESCRIPTION | ENDPOINT | PARAMS | . | GET | All Images extracted from pages | /api/extract/images | None | . | GET | Images by ID | /api/extract/images/&lt;id&gt; | id | . | POST | Extracts Images from URL | /api/extract/images | url | . | POST | Deletes Images by ID | /api/extract/images/delete | id | . ",
    "url": "http://localhost:4000/api#extract",
    "relUrl": "/api#extract"
  },"3": {
    "doc": "API",
    "title": "Internal Linking Graphs",
    "content": "| METHOD | DESCRIPTION | ENDPOINT | PARAMS | . | GET | All Internal Linking Graphs generated | /api/graphs | None | . | GET | Graphs by ID | /api/graphs/&lt;id&gt; | id | . | POST | Extracts graph from domain | /api/graphs | domain | . | POST | Deletes Graphs by ID | /api/graphs/delete | id | . ",
    "url": "http://localhost:4000/api#internal-linking-graphs",
    "relUrl": "/api#internal-linking-graphs"
  },"4": {
    "doc": "API",
    "title": "Query Keywords Generator",
    "content": "| METHOD | DESCRIPTION | ENDPOINT | PARAMS | . | GET | All Keywords generated | /api/keywords | None | . | GET | Keywords by ID | /api/keywords/&lt;id&gt; | id | . | POST | Extracts keywords from query | /api/keywords | query | . | POST | Deletes Keywords by ID | /api/keywords/delete | id | . ",
    "url": "http://localhost:4000/api#query-keywords-generator",
    "relUrl": "/api#query-keywords-generator"
  },"5": {
    "doc": "API",
    "title": "Search Engine Result Page Rank",
    "content": "| METHOD | DESCRIPTION | ENDPOINT | PARAMS | . | GET | All Ranks | /api/rank | None | . | POST | Extracts ranks from query and domain | /api/rank | query &amp; domain | . | POST | Deletes ranks by ID | /api/rank/delete | id | . ",
    "url": "http://localhost:4000/api#search-engine-result-page-rank",
    "relUrl": "/api#search-engine-result-page-rank"
  },"6": {
    "doc": "API",
    "title": "API",
    "content": ". | Lighthouse | Extract . | Headers | Status Code Links | Internal &amp; External Links | Images | . | Internal Linking Graphs | Query Keywords Generator | Search Engine Result Page Rank | . ",
    "url": "http://localhost:4000/api",
    "relUrl": "/api"
  },"7": {
    "doc": "Home",
    "title": "Open source SEO Audits Toolkit",
    "content": "OSAT is a collection of multiple tools to help you in your quest for a better SEO. All of these tools have been grouped into a single web app. I’ve grown tired of SEO agencies making us pay hundreds of euros for simple tools. I decided to develop OSAT to help users find issues in their website and increase their SEO for free. ",
    "url": "http://localhost:4000/#open-source-seo-audits-toolkit",
    "relUrl": "/#open-source-seo-audits-toolkit"
  },"8": {
    "doc": "Home",
    "title": "Why you need it",
    "content": ". | It’s free, easy and open source. | It has a growing list of features | It’s easy to install | . ",
    "url": "http://localhost:4000/#why-you-need-it",
    "relUrl": "/#why-you-need-it"
  },"9": {
    "doc": "Home",
    "title": "Features",
    "content": ". | Lighthouse Score: Run Lighthouse Audits and keep track of your scores | SERP Rank - Get the rank of your website on google for specific queries | Keywords Finder - Finds all the Mono,Bi and Trigrams associated to a specific request. Helps you write content faster. | Internal Links Graphs - Creates a graph of your website showing all the connections between your pages. | Extract Headers/Links/Images - Easily extract all the links on your website and their status codes, the headers of a page and all the images. | . ",
    "url": "http://localhost:4000/#features",
    "relUrl": "/#features"
  },"10": {
    "doc": "Home",
    "title": "Installation",
    "content": "You need: . | Python3 | Redis Server | . git clone https://github.com/StanGirard/SEOToolkit cd SEOToolkit . Then install dependencies . pip install -r requirements.txt . ",
    "url": "http://localhost:4000/#installation",
    "relUrl": "/#installation"
  },"11": {
    "doc": "Home",
    "title": "Running",
    "content": " ",
    "url": "http://localhost:4000/#running",
    "relUrl": "/#running"
  },"12": {
    "doc": "Home",
    "title": "Flask",
    "content": "python3 run.py . ",
    "url": "http://localhost:4000/#flask",
    "relUrl": "/#flask"
  },"13": {
    "doc": "Home",
    "title": "Redis Server",
    "content": "redis-server . ",
    "url": "http://localhost:4000/#redis-server",
    "relUrl": "/#redis-server"
  },"14": {
    "doc": "Home",
    "title": "Celery Worker",
    "content": "celery worker -A celery_worker.celery --loglevel=info . ",
    "url": "http://localhost:4000/#celery-worker",
    "relUrl": "/#celery-worker"
  },"15": {
    "doc": "Home",
    "title": "Dashboard",
    "content": "You can access the dashboard by going to localhost:5000 . ",
    "url": "http://localhost:4000/#dashboard",
    "relUrl": "/#dashboard"
  },"16": {
    "doc": "Home",
    "title": "Config",
    "content": "If needed create a .env file with information that you would like to overload from config.py . ",
    "url": "http://localhost:4000/#config",
    "relUrl": "/#config"
  },"17": {
    "doc": "Home",
    "title": "Screenshots",
    "content": " ",
    "url": "http://localhost:4000/#screenshots",
    "relUrl": "/#screenshots"
  },"18": {
    "doc": "Home",
    "title": "SERP Rank",
    "content": ". ",
    "url": "http://localhost:4000/#serp-rank",
    "relUrl": "/#serp-rank"
  },"19": {
    "doc": "Home",
    "title": "Internal Links Graphs",
    "content": ". ",
    "url": "http://localhost:4000/#internal-links-graphs",
    "relUrl": "/#internal-links-graphs"
  },"20": {
    "doc": "Home",
    "title": "Keywords Finder",
    "content": ". ",
    "url": "http://localhost:4000/#keywords-finder",
    "relUrl": "/#keywords-finder"
  },"21": {
    "doc": "Home",
    "title": "Lighthouse Audit",
    "content": ". ",
    "url": "http://localhost:4000/#lighthouse-audit",
    "relUrl": "/#lighthouse-audit"
  },"22": {
    "doc": "Home",
    "title": "Images Extractor",
    "content": ". ",
    "url": "http://localhost:4000/#images-extractor",
    "relUrl": "/#images-extractor"
  },"23": {
    "doc": "Home",
    "title": "Home",
    "content": ". Get started now View it on GitHub . ",
    "url": "http://localhost:4000/",
    "relUrl": "/"
  },"24": {
    "doc": "Installation",
    "title": "Installation",
    "content": "To get started with OSAT you need a few things installed on your computer. ",
    "url": "http://localhost:4000/installation",
    "relUrl": "/installation"
  },"25": {
    "doc": "Python3",
    "title": "Python3",
    "content": "In order to run OSAT you need to install Python3 . You can find and download Python here . ",
    "url": "http://localhost:4000/installation/python.html#python3",
    "relUrl": "/installation/python.html#python3"
  },"26": {
    "doc": "Python3",
    "title": "MacOS",
    "content": " ",
    "url": "http://localhost:4000/installation/python.html#macos",
    "relUrl": "/installation/python.html#macos"
  },"27": {
    "doc": "Python3",
    "title": "Is Python 3 already installed?",
    "content": "Before we start, make sure Python 3 isn’t already installed on your computer. Open up the command line via the Terminal application which is located at Applications -&gt; Utilities -&gt; Terminal. Then type the command python --version followed by the Enter key to see the currently installed version of Python. $ python --version Python 2.7.17 . It’s possible that Python 3 may have already been installed as python3. Run the command python3 --version to check, however most likely this will throw an error. ",
    "url": "http://localhost:4000/installation/python.html#is-python-3-already-installed",
    "relUrl": "/installation/python.html#is-python-3-already-installed"
  },"28": {
    "doc": "Python3",
    "title": "Install XCode",
    "content": "The first step for Python 3 is to install Apple’s Xcode program which is necessary for iOS development as well as most programming tasks. We will use XCode to install Homebrew. In your Terminal app, run the following command to install XCode and its command-line tools: . $ xcode-select --install . It is a large program so this make take a while to download. Make sure to click through all the confirmation prompts XCode requires. ",
    "url": "http://localhost:4000/installation/python.html#install-xcode",
    "relUrl": "/installation/python.html#install-xcode"
  },"29": {
    "doc": "Python3",
    "title": "Install Homebrew",
    "content": "Next install Homebrew by copy/pasting the following command into Terminal and then type Enter: . $ ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\" . To confirm Homebrew installed correctly, run this command: . $ brew doctor . Your system is ready to brew. ",
    "url": "http://localhost:4000/installation/python.html#install-homebrew",
    "relUrl": "/installation/python.html#install-homebrew"
  },"30": {
    "doc": "Python3",
    "title": "Install Python 3",
    "content": "Now we can install the latest version of Python 3. Type the following command into Terminal and press Enter: . $ brew install python3 . To confirm which version of Python 3 was installed, run the following command in Terminal: . $ python3 --version Python 3.7.7 . Finally, to run our new version of Python 3 open an interactive shall by typing python3 within Terminal: . $ python3 Python 3.7.7 (default, Mar 10 2020, 02:16:23) [Clang 11.0.0 (clang-1100.0.33.17)] on darwin Type \"help\", \"copyright\", \"credits\" or \"license\" for more information. &gt;&gt;&gt; . To exit the Python 3 interactive shell, you can type either exit() and then Return or type Control+d which means hold both the Control and D keys at the same time. ",
    "url": "http://localhost:4000/installation/python.html#install-python-3",
    "relUrl": "/installation/python.html#install-python-3"
  },"31": {
    "doc": "Python3",
    "title": "Python3",
    "content": ". | Python3 | MacOS . | Is Python 3 already installed? | Install XCode | Install Homebrew | Install Python 3 | . | . ",
    "url": "http://localhost:4000/installation/python.html",
    "relUrl": "/installation/python.html"
  },"32": {
    "doc": "Redis",
    "title": "Ubuntu 18.04",
    "content": " ",
    "url": "http://localhost:4000/installation/redis.html#ubuntu-1804",
    "relUrl": "/installation/redis.html#ubuntu-1804"
  },"33": {
    "doc": "Redis",
    "title": "Step 1 — Installing and Configuring Redis",
    "content": "In order to get the latest version of Redis, we will use apt to install it from the official Ubuntu repositories. Update your local apt package cache and install Redis by typing: . sudo apt update sudo apt install redis-server . This will download and install Redis and its dependencies. Following this, there is one important configuration change to make in the Redis configuration file, which was generated automatically during the installation. Open this file with your preferred text editor: . sudo nano /etc/redis/redis.conf . Inside the file, find the supervised directive. This directive allows you to declare an init system to manage Redis as a service, providing you with more control over its operation. The supervised directive is set to no by default. Since you are running Ubuntu, which uses the systemd init system, change this to systemd: . /etc/redis/redis.conf . # If you run Redis from upstart or systemd, Redis can interact with your # supervision tree. Options: # supervised no - no supervision interaction # supervised upstart - signal upstart by putting Redis into SIGSTOP mode # supervised systemd - signal systemd by writing READY=1 to $NOTIFY_SOCKET # supervised auto - detect upstart or systemd method based on # UPSTART_JOB or NOTIFY_SOCKET environment variables # Note: these supervision methods only signal \"process is ready.\" # They do not enable continuous liveness pings back to your supervisor. supervised systemd . That’s the only change you need to make to the Redis configuration file at this point, so save and close it when you are finished. Then, restart the Redis service to reflect the changes you made to the configuration file: . sudo systemctl restart redis.service . With that, you’ve installed and configured Redis and it’s running on your machine. Before you begin using it, though, it’s prudent to first check whether Redis is functioning correctly. ",
    "url": "http://localhost:4000/installation/redis.html#step-1--installing-and-configuring-redis",
    "relUrl": "/installation/redis.html#step-1--installing-and-configuring-redis"
  },"34": {
    "doc": "Redis",
    "title": "Step 2 — Testing Redis",
    "content": "As with any newly-installed software, it’s a good idea to ensure that Redis is functioning as expected before making any further changes to its configuration. We will go over a handful of ways to check that Redis is working correctly in this step. Start by checking that the Redis service is running: . sudo systemctl status redis . If it is running without any errors, this command will produce output similar to the following: . Output ● redis-server.service - Advanced key-value store Loaded: loaded (/lib/systemd/system/redis-server.service; enabled; vendor preset: enabled) Active: active (running) since Wed 2018-06-27 18:48:52 UTC; 12s ago Docs: http://redis.io/documentation, man:redis-server(1) Process: 2421 ExecStop=/bin/kill -s TERM $MAINPID (code=exited, status=0/SUCCESS) Process: 2424 ExecStart=/usr/bin/redis-server /etc/redis/redis.conf (code=exited, status=0/SUCCESS) Main PID: 2445 (redis-server) Tasks: 4 (limit: 4704) CGroup: /system.slice/redis-server.service └─2445 /usr/bin/redis-server 127.0.0.1:6379 . Here, you can see that Redis is running and is already enabled, meaning that it is set to start up every time the server boots. Note: This setting is desirable for many common use cases of Redis. If, however, you prefer to start up Redis manually every time your server boots, you can configure this with the following command: . sudo systemctl disable redis . To test that Redis is functioning correctly, connect to the server using the command-line client: . redis-cli . In the prompt that follows, test connectivity with the ping command: . ping . Output . PONG . This output confirms that the server connection is still alive. Next, check that you’re able to set keys by running: . set test \"It's working!\" . Output . OK . Retrieve the value by typing: . get test . Assuming everything is working, you will be able to retrieve the value you stored: . Output . \"It's working!\" . After confirming that you can fetch the value, exit the Redis prompt to get back to the shell: . exit . As a final test, we will check whether Redis is able to persist data even after it’s been stopped or restarted. To do this, first restart the Redis instance: . sudo systemctl restart redis . Then connect with the command-line client once again and confirm that your test value is still available: . redis-cli get test . The value of your key should still be accessible: . Output . \"It's working!\" . Exit out into the shell again when you are finished: . exit . With that, your Redis installation is fully operational and ready for you to use. However, some of its default configuration settings are insecure and provide malicious actors with opportunities to attack and gain access to your server and its data. The remaining steps in this tutorial cover methods for mitigating these vulnerabilities, as prescribed by the official Redis website. Although these steps are optional and Redis will still function if you choose not to follow them, it is strongly recommended that you complete them in order to harden your system’s security. ",
    "url": "http://localhost:4000/installation/redis.html#step-2--testing-redis",
    "relUrl": "/installation/redis.html#step-2--testing-redis"
  },"35": {
    "doc": "Redis",
    "title": "MacOS",
    "content": "By using Homebrew, you greatly reduce the cost of setting up and configuring the development environment on Mac OS X. Let’s install Redis for the good. $ brew install redis . After installation, you will see some notification about some caveats on configuring. Just leave it. Launch Redis on computer starts. $ ln -sfv /usr/local/opt/redis/*.plist ~/Library/LaunchAgents . Start Redis server via “launchctl”. $ launchctl load ~/Library/LaunchAgents/homebrew.mxcl.redis.plist . Start Redis server using configuration file. $ redis-server /usr/local/etc/redis.conf . Stop Redis on autostart on computer start. $ launchctl unload ~/Library/LaunchAgents/homebrew.mxcl.redis.plist . Location of Redis configuration file. /usr/local/etc/redis.conf . Uninstall Redis and its files. $ brew uninstall redis $ rm ~/Library/LaunchAgents/homebrew.mxcl.redis.plist . Get Redis package information. $ brew info redis . Test if Redis server is running. $ redis-cli ping . If it replies “PONG”, then it’s good to go! . ",
    "url": "http://localhost:4000/installation/redis.html#macos",
    "relUrl": "/installation/redis.html#macos"
  },"36": {
    "doc": "Redis",
    "title": "Redis",
    "content": ". | Ubuntu 18.04 . | Step 1 — Installing and Configuring Redis | Step 2 — Testing Redis | . | MacOS | . ",
    "url": "http://localhost:4000/installation/redis.html",
    "relUrl": "/installation/redis.html"
  }
}
